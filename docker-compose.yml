version: "3.8"
services:
  snode:
    image: blocknetdx/servicenode:latest
    entrypoint: /opt/blockchain/start-snode.sh
    restart: unless-stopped
    environment:
      PUBLIC_IP: "${PUBLIC_IP}"
      RPC_USER: "${RPC_USER}"
      RPC_PASSWORD: "${RPC_PASSWORD}"
      SN_NAME: "${SN_NAME}"
      SN_ADDRESS: "${SN_ADDRESS}"
      SN_KEY: "${SN_KEY}"
    volumes:
      - snode-config:/opt/blockchain/config
      - type: bind
        source: "${BLOCKNET_DATADIR}"
        target: /opt/blockchain/data
      - type: bind
        source: ./scripts
        target: /opt/blockchain
      - type: bind
        source: ./plugins
        target: /opt/blockchain/data/plugins
    ports:
      - "41412:41412"
      - "41414:41414"
    networks:
      backend:
        ipv4_address: 172.31.0.2

  xr_proxy:
    image: blocknetdx/exrproxy:0.7.9
    entrypoint: /opt/scripts/start-xrproxy.sh
    restart: unless-stopped
    ports:
      - "80:80"
    environment:
      RPC_USER: "${RPC_USER}"
      RPC_PASSWORD: "${RPC_PASSWORD}"
      SN_KEY: "${SN_KEY}"
    volumes:
      - xrproxy-config:/opt/uwsgi/conf
      - xrproxy-nginx:/etc/nginx
      - type: bind
        source: ./scripts
        target: /opt/scripts
    networks:
      frontend:
      backend:
        ipv4_address: 172.31.0.6

  getpeers:
    image: xrouterserviceexplorer/xcloud.getpeers:latest
    environment:
      COIN_CONFIG: ${COIN_CONFIG}
    restart: unless-stopped
    ports:
      - "8080:8080"

networks:
  frontend:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.41.0.0/24
    driver_opts:
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.bridge.enable_ip_masquerade: "true"
  backend:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.31.0.0/24
    driver_opts:
      com.docker.network.bridge.enable_icc: "true"

volumes:
  snode-config:
  xrproxy-config:
  xrproxy-nginx:
  scripts: